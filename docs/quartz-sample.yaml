### REQUIRED

name: <my-quartz-env> # unique name of quartz cluster/environment

dns: # either of domain or zone must be specified
    domain: "" # default <name>.<dns.zone>
    zone: lab.metrostar.cloud # default parsed from dns.domain

aws:
    region: us-east-1

### Optional, frequently customized

administrators:
    - <admin-user> # iam user(s) with eks admin access

alerts:
    subscriptions: []

applications:
    <my-app>:
        branch: develop # default main
        callback_urls: # triggers keycloak client to be configured with defined callbacks
            - path: /
              url: ""
        db:  # optional, default disabled
            admin: false # default false
            db_name: "" # optional
            enabled: true
            username: appuser # optional
        keycloak: {} # keycloak custom settings
        organization: "" # default github.organization
        provider: "" # default github
        repo: <my-app> # default app name
        repo_url: "" # default generated github url from org/repo
        settings: # unstructured settings to be passed directly to terraform/helm
            buckets:
                - name: documents
                  read: true
                  write: true
            public: false
        type: ui # optional, default repo name suffix, Ex. <app>-ui

auth:
    groups: # keycloak realm groups
        Admins:
            environments: [] # default dev/stage/prod
            roles:
                - Admin
        Users: {} # all default settings, dev/stage/prod realms, role name matching group
        administrators:
            environments:
                - infra
            roles: [] # default group name
        readers:
            disabled: false # enable/disable built-in groups
            environments:
                - infra

    users: # keycloak realm users
        quartzadmin: # built-in infrastructure admin account
            disabled: false
            email_address: ""
            environments:
                - infra
            first_name: ""
            groups:
                - administrators
                - readers
            last_name: ""
            password:
                temporary: true
                value: ChangeMe1234!
            test: false
        quartzuser: # built-in infrastructure user/reader account
            disabled: false
            email_address: ""
            environments:
                - infra
            first_name: ""
            groups:
                - readers
            last_name: ""
            password:
                temporary: true
                value: ChangeMe1234!
            test: false
        testadmin1:
            disabled: false
            email_address: test.admin1@example.com
            environments: [] # default dev/stage/prod
            first_name: Test
            groups:
                - Admins
            last_name: Admin1
            password:
                temporary: false # true to require password change on first login
                value: "" # generate random password when empty
            test: true # adds username/password to jenkins user credentials for use in pipelines
        testuser1:
            disabled: false
            email_address: test.user1@example.com
            environments:
                - dev
                - prod
                - stage
            first_name: Test
            groups:
                - Users
            last_name: User1
            password:
                temporary: false
                value: ""
            test: true

github:
    organization: "" # default MetroStar
    tag_release: false # push a tag for each build released to dev through jenkins
    webhooks:
        build: true # enable github webhooks to trigger jenkins CI builds
        release: false # enable github webhook to trigger production releases via github release

gitops: # settings for fluxcd and argocd managed deployments
    apps:
        branch: <my-quartz-env> # default name
        organization: "" # default github.organization
        provider: "" # default github
        repo: "" # default quartz-cicd
        repo_url: "" # default generated github url org/repo
    core:
        branch: main # default main
        organization: MetroStar
        provider: github
        repo: quartz-infrastructure # default quartz-infrastructure
        repo_url: https://github.com/MetroStar/quartz-infrastructure

log:
    console:
        level: "" # default warn
    file: # enable file logging
        level: "" # default debug
        path: ./log/debug.log # required to enable file logging

### Internal, rarely customized
core:
    applications:
        argocd: # default values for argocd, remained of infrastructre apps omitted for brevity
            access_token_lifespan_seconds: 43200
            base_url: ""
            callback_urls:
                - path: /auth/callback
                  url: ""
                - path: /api/dex/callback
                  url: ""
            db:
                admin: false
                db_name: ""
                enabled: false
                username: ""
            default_path: /applications
            description: ArgoCD
            keycloak:
                mappers:
                    email:
                        config:
                            access.token.claim: "true"
                            claim.name: email
                            id.token.claim: "true"
                            introspection.token.claim: "true"
                            jsonType.label: String
                            user.attribute: email
                            userinfo.token.claim: "true"
                        protocol: openid-connect
                        protocolMapper: oidc-usermodel-property-mapper
                    fullname:
                        config:
                            access.token.claim: "true"
                            id.token.claim: "true"
                            introspection.token.claim: "true"
                            userinfo.token.claim: "true"
                        protocol: openid-connect
                        protocolMapper: oidc-full-name-mapper
                    groups:
                        config:
                            access.token.claim: "true"
                            claim.name: groups
                            full.path: "true"
                            id.token.claim: "true"
                            introspection.token.claim: "true"
                            multivalued: "true"
                            userinfo.token.claim: "true"
                        protocol: openid-connect
                        protocolMapper: oidc-group-membership-mapper
                    nickname:
                        config:
                            access.token.claim: "true"
                            claim.name: nickname
                            id.token.claim: "true"
                            introspection.token.claim: "true"
                            jsonType.label: String
                            user.attribute: nickname
                            userinfo.token.claim: "true"
                        protocol: openid-connect
                        protocolMapper: oidc-usermodel-attribute-mapper
                    profile:
                        config:
                            access.token.claim: "true"
                            claim.name: profile
                            id.token.claim: "true"
                            introspection.token.claim: "true"
                            jsonType.label: String
                            user.attribute: profile
                            userinfo.token.claim: "true"
                        protocol: openid-connect
                        protocolMapper: oidc-usermodel-attribute-mapper
                    username:
                        config:
                            access.token.claim: "true"
                            claim.name: preferred_username
                            id.token.claim: "true"
                            introspection.token.claim: "true"
                            jsonType.label: String
                            user.attribute: username
                            userinfo.token.claim: "true"
                        protocol: openid-connect
                        protocolMapper: oidc-usermodel-property-mapper
            scopes:
                - argocd
    custom_theme_enabled: false
    description: Quartz
    name: infra
    otp:
        enabled: false
        required: false
    registration_allowed: false
    type: infra

environments: # default values for dev environment/realm, stage and prod omitted for brevity
    dev:
        ci: true
        custom_theme_enabled: false
        description: Quartz (DEV)
        enabled: true
        keycloak:
            mappers:
                groups:
                    config:
                        access.token.claim: "true"
                        claim.name: groups
                        full.path: "false"
                        id.token.claim: "true"
                        introspection.token.claim: "true"
                        multivalued: "true"
                        userinfo.token.claim: "true"
                    protocol: openid-connect
                    protocolMapper: oidc-group-membership-mapper
        name: dev
        otp:
            enabled: false
            required: false
        registration_allowed: false
        type: app

mirror: # settings for mirrored resources in quartz environment
    grype: false
    image_repository:
        enabled: true # enable/disable imageswap automated mirroring of docker repositories
        source_registries:
            - registry1.dso.mil
            - registry.dso.mil
            - quay.io
        target: ghcr.io/metrostar/quartz-pkgs

project: quartz

providers:
    cicd: jenkins
    cloud: aws
    dns: aws
    monitoring: cloudwatch
    oidc: keycloak
    secrets: aws-ssm-parameter
    source_control: github

stage_paths: [] # default ./terraform/stages

stages: # autogenerated from stage_paths
    custom-stage:
        checks: # status checks used by the quartz installer
            post_install: # arbitrary name for logging
                after: # run these checks after the terraform apply/destroy/etc action
                    - apply
                before: [] # run these checks before the terraform apply/destroy/etc action
                http: # poll for http response
                    - app: "" # optional, used to generate url when not fully qualified
                      content: # success condition
                        json:
                            key: status
                        value: UP
                      path: /api/system/status
                      retry:
                        limit: 0
                        wait_seconds: 0
                      status_codes: []
                      url: "" # optional, generated when app key is specified, required otherwise
                      verify: false
                kubernetes: # kubectl wait checks for kubernetes resource conditions
                    - kind: HelmRelease
                      name: bigbang
                      namespace: quartz
                      state: Ready
                      timeout: 1200
                state: # poll until quartz-install-state configmap is set
                    - key: sonarqube.initialized
                      retry:
                        limit: 0
                        wait_seconds: 0
                      value: "true"
        dependencies: # explicitly depends on another module, cannot be applied until after
            - other-stage
        destroy: # control terraform destroy behavior, default normal terraform destroy
            break: false # for debugging purposes, causes the installer to break/exit prior to destroying
            exclude: [] # explicitly exclude terraform resources from destroy
            include: [] # explicitly include terraform resources on destroy
            skip: false # completely skip destroying this module
        disabled: false
        order: 20 # explicit ordering, modules are applied in sequential order
        override_vars: false # disable injection of quartz rednered settings
        path: <path to stage directory>
        providers:
            kubernetes: true # configure kubernetes provider
        type: "" # default terraform
        vars: # input variables to stage/module
            <tf-input-var>: # choose one of the following options
                config: "" # path to quartz config key
                secret: "" # path to quartz secret value
                env: "" # environment variable 
                stage: # extract output value from prior module
                    name: "other-stage"
                    output: "output1"
                value: "" # literal

state: # use kubernetes configmap for installer state management
    configMapName: quartz-install-state
    configMapNamespace: quartz
    enabled: true

terraform:
    version: 1.5.7 # default 1.5.7, last open source terraform version

tmp: ./out # default system tmp/random, used to redirect generated/internal files to known location
